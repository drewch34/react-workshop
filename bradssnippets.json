[
    "Remix Export Links": {
    "prefix": "exportlinks",
    "body": [
      "export const links: LinksFunction = () => [{ rel: 'stylesheet', href: stylesheet }]"
    ]
  },
  "Remix Export Headers": {
    "prefix": "exportheaders",
    "body": [
      "export const headers: HeadersFunction = ({ actionHeaders, loaderHeaders, parentHeaders }) => ({",
      "  'Cache-Control': 'max-age=300, s-maxage=3600',",
      "})"
    ]
  },
  "Remix Export Meta": {
    "prefix": "exportmeta",
    "body": [
      "export const meta: MetaFunction = () => {",
      "  return [",
      "    { title: 'Shopping App' },",
      "    {",
      "      name: 'description',",
      "      content: 'Our app description',",
      "    },",
      "  ]",
      "}"
    ],
    "description": ""
  },
  "Remix Export Loader": {
    "prefix": "exportloader",
    "body": [
      "export const loader = async ({ params }: LoaderArgs) => {",
      "  return json({ })",
      "}",
      "",
      "// useLoaderData<typeof loader>()"
    ]
  },
  "Tailwind Flexbox Column": {
    "prefix": "tailwind-flex",
    "body": [
      "<div className=\"md:flex\">",
      "  <div className=\"md:w-56\"></div>",
      "  <div className=\"md:flex-1\"></div>",
      "</div>"
    ],
    "description": "Basic Tailwind Flexbox Structure for columns"
  },
  "Tailwind Flexbox Split": {
    "prefix": "tailwind-flex-split",
    "body": [
      "<div className=\"md:flex md:justify-between md:items-center\">",
      "  <div className=\"\"></div>",
      "  <div className=\"\"></div>",
      "</div>"
    ],
    "description": "Basic Tailwind Flexbox Structure for columns"
  },
  "disable": {
    "prefix": "disable",
    "body": ["// eslint-disable-next-line"]
  },
  "ignore (same as disable)": {
    "prefix": "ignore",
    "body": ["// eslint-disable-next-line"]
  },
  "console.log": {
    "prefix": "con",
    "body": ["console.log($0)"]
  },
  "css custom properties": {
    "prefix": "var",
    "body": ["var(--$0);"]
  },
  "const": {
    "prefix": "const",
    "body": ["const { $1 } = $0"]
  },
  "function": {
    "prefix": "f",
    "body": ["function $0() {", "  ", "}"]
  },
  "getElementById('')": {
    "prefix": "element",
    "body": ["document.getElementById('$0')"]
  },
  "React.lazy": {
    "prefix": "lazy",
    "body": ["const $1 = React.lazy(() => import('$0'))"]
  },
  "Suspense": {
    "prefix": "suspense",
    "body": ["<Suspense fallback={<div>loading...</div>}>$0</Suspense>"]
  },
  "ReactDOM": {
    "prefix": "ReactDOM",
    "body": ["ReactDOM.render(<${0:App} />, document.getElementById('root'))"]
  },
  "useState": {
    "prefix": "state",
    "body": ["const [${1}, set${1/(.*)/${1:/capitalize}/}] = useState($0)"]
  },
  "useEffect": {
    "prefix": "effect",
    "body": ["useEffect(() => {", "  ${0}", "}, [])"]
  },
  "jsx": {
    "prefix": "jsx",
    "body": ["_jsx($0, {})"]
  },
]